{"version":3,"sources":["../../src/NewsletterForm/NewsletterForm.js"],"names":["NewsletterForm","inverse","classes","onSubmit","email","setEmail","intl","handleChange","event","target","value","handleSubmit","preventDefault","formatMessage","messages","label","input","button","undefined","send","propTypes","PropTypes","shape","string","isRequired","bool","func"],"mappings":"kcAAA,qDACA,6DACA,qCAEA,+DACA,qEACA,2EAEA,4DAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAoC,6BAAjCC,CAAAA,OAAiC,MAAjCA,OAAiC,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,eAC/B,oBAAS,EAAT,CAD+B,wDAClDC,KADkD,eAC3CC,QAD2C,eAEzD,GAAMC,CAAAA,IAAI,CAAG,wBAAb,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAWH,CAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB,CAArB,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAW,CAC9BA,KAAK,CAACI,cAAN,GACAT,QAAQ,CAACC,KAAD,CACT,CAHD,CAKA,MACE,iCAAC,eAAD,wBACE,UAAU,CAAC,QADb,CAEE,SAAS,CAAC,MAFZ,CAGE,OAAO,CAAC,MAHV,oEAIa,UAJb,kEAKYO,YALZ,wBAOE,gCAAC,qBAAD,EACE,KAAK,CAAEP,KADT,CAEE,KAAK,CAAEE,IAAI,CAACO,aAAL,CAAmBC,qBAASC,KAA5B,CAFT,CAGE,IAAI,CAAC,OAHP,CAIE,QAAQ,CAAER,YAJZ,CAKE,SAAS,CAAEL,OAAO,CAACc,KALrB,CAME,QAAQ,KANV,EAPF,CAeE,gCAAC,kBAAD,EACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAC,WAFV,CAGE,SAAS,CAAEd,OAAO,CAACe,MAHrB,CAIE,IAAI,CAAC,OAJP,CAKE,KAAK,CAAEhB,OAAO,CAAGiB,SAAH,CAAe,SAL/B,EAOGZ,IAAI,CAACO,aAAL,CAAmBC,qBAASK,IAA5B,CAPH,CAfF,CA0BH,CArCD,CAuCAnB,cAAc,CAACoB,SAAf,CAA2B,CACzBnB,OAAO,CAAE,KADgB,CAA3B,CAIAD,cAAc,CAACoB,SAAf,CAA2B,CACzBlB,OAAO,CAAEmB,sBAAUC,KAAV,CAAgB,CACvBL,MAAM,CAAEI,sBAAUE,MADK,CAEvBP,KAAK,CAAEK,sBAAUE,MAFM,CAAhB,EAGNC,UAJsB,CAKzBvB,OAAO,CAAEoB,sBAAUI,IALM,CAMzBtB,QAAQ,CAAEkB,sBAAUK,IAAV,CAAeF,UANA,CAA3B,C,aASexB,c","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport Box from '@livipdev/core/Box';\nimport Button from '@livipdev/core/Button';\nimport TextField from '@livipdev/core/TextField';\n\nimport messages from './messages';\n\nconst NewsletterForm = ({ inverse, classes, onSubmit }) => {\n  const [email, setEmail] = useState('');\n  const intl = useIntl();\n\n  const handleChange = (event) => setEmail(event.target.value);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(email);\n  };\n\n  return (\n    <Box\n      alignItems=\"center\"\n      component=\"form\"\n      display=\"flex\"\n      alignItems=\"flex-end\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        value={email}\n        label={intl.formatMessage(messages.label)}\n        type=\"email\"\n        onChange={handleChange}\n        className={classes.input}\n        required\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        className={classes.button}\n        size=\"small\"\n        color={inverse ? undefined : 'primary'}\n      >\n        {intl.formatMessage(messages.send)}\n      </Button>\n    </Box>\n  );\n};\n\nNewsletterForm.propTypes = {\n  inverse: false,\n};\n\nNewsletterForm.propTypes = {\n  classes: PropTypes.shape({\n    button: PropTypes.string,\n    input: PropTypes.string,\n  }).isRequired,\n  inverse: PropTypes.bool,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default NewsletterForm;\n"],"file":"NewsletterForm.js"}