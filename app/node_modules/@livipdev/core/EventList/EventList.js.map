{"version":3,"sources":["../../src/EventList/EventList.js"],"names":["EventList","classes","events","currentFilter","filterEvents","columns","cellHeight","spacingType","customClass","hideDate","variant","theme","viewport","spacing","cols","mergedClasses","root","join","map","event","id","tile","propTypes","defaultProps"],"mappings":"iWAAA,oDAEA,6DACA,qEACA,+DACA,mEACA,iCAKA,sCAIA,8DACA,oE,myBAEA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAWZ,IAVJC,CAAAA,OAUI,MAVJA,OAUI,CATJC,MASI,MATJA,MASI,CARJC,aAQI,MARJA,aAQI,CAPJC,YAOI,MAPJA,YAOI,CANJC,OAMI,MANJA,OAMI,CALJC,UAKI,MALJA,UAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,WAGI,MAHJA,WAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,OACI,MADJA,OACI,CACJ,GAAMC,CAAAA,KAAK,CAAG,sBAAd,CACA,GAAMC,CAAAA,QAAQ,CAAG,sBAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,0CAA2BF,KAA3B,CAAkCC,QAAlC,CAAhB,CACA,GAAME,CAAAA,IAAI,CAAG,yCAA0BT,OAA1B,CAAmCO,QAAnC,CAAb,CACA,GAAMG,CAAAA,aAAa,gCACdd,OADc,MAEjBe,IAAI,CAAE,CACJf,OAAO,CAACe,IADJ,CAEJR,WAFI,EAGJS,IAHI,CAGC,GAHD,CAFW,EAAnB,CAQA,MACE,iCAAC,oBAAD,EACE,OAAO,CAAEF,aADX,CAEE,IAAI,CAAED,IAFR,CAGE,UAAU,CAAER,UAHd,CAIE,OAAO,CAAEO,OAJX,EAOIX,MAAM,CAACgB,GAAP,CAAW,SAACC,KAAD,QACT,iCAAC,wBAAD,EAAc,GAAG,CAAEA,KAAK,CAACC,EAAzB,CAA6B,SAAS,CAAEL,aAAa,CAACM,IAAtD,EAEIX,OAAO,GAAK,SAAZ,CACI,gCAAC,uBAAD,2BAAa,aAAa,CAAEI,IAA5B,CAAkC,QAAQ,CAAEL,QAA5C,EAA0DU,KAA1D,EADJ,CAEI,gCAAC,qBAAD,EACE,KAAK,CAAEA,KADT,CAEE,aAAa,CAAEhB,aAFjB,CAGE,YAAY,CAAEC,YAHhB,EAJR,CADS,CAAX,CAPJ,CAuBH,CAhDD,CAkDAJ,SAAS,CAACsB,SAAV,CAAsBA,qBAAtB,CACAtB,SAAS,CAACuB,YAAV,CAAyBA,wBAAzB,C,aAEevB,S","sourcesContent":["import React from 'react';\n\nimport GridList from '../GridList';\nimport GridListTile from '../GridListTile';\nimport EventCard from '../EventCard';\nimport ProjectCard from '../ProjectCard';\nimport {\n  useTheme,\n  useWidth,\n} from '../styles';\n\nimport {\n  selectColsBasedOnViewport,\n  selectSpaceBasedOnViewport,\n} from './selectors';\nimport propTypes from './propTypes';\nimport defaultProps from './defaultProps';\n\nconst EventList = ({\n  classes,\n  events,\n  currentFilter,\n  filterEvents,\n  columns,\n  cellHeight,\n  spacingType,\n  customClass,\n  hideDate,\n  variant,\n}) => {\n  const theme = useTheme();\n  const viewport = useWidth();\n  const spacing = selectSpaceBasedOnViewport(theme, viewport);\n  const cols = selectColsBasedOnViewport(columns, viewport)\n  const mergedClasses = {\n    ...classes,\n    root: [\n      classes.root,\n      customClass,\n    ].join(' '),\n  };\n\n  return (\n    <GridList\n      classes={mergedClasses}\n      cols={cols}\n      cellHeight={cellHeight}\n      spacing={spacing}\n    >\n      {\n        events.map((event) => (\n          <GridListTile key={event.id} className={mergedClasses.tile}>\n            {\n              variant === 'project'\n                ? <ProjectCard parentColumns={cols} hideDate={hideDate} {...event} />\n                : <EventCard\n                    event={event}\n                    currentFilter={currentFilter}\n                    filterEvents={filterEvents}\n                  />\n            }\n          </GridListTile>\n        ))\n      }\n    </GridList>\n  );\n};\n\nEventList.propTypes = propTypes;\nEventList.defaultProps = defaultProps;\n\nexport default EventList;\n"],"file":"EventList.js"}